import React from 'react';
import Link from 'gatsby-link';
import Template from '../../../components/templates/Webpack';
import Markdown from '../../../components/Markdown';

export default (props) => {
  return (
    <Template>
      <h1>
        Development Build
      </h1>
      <p>
        Info about creating a development build...
      </p>

      <p>
        If you open up the <code>package.json</code> file you'll see two scripts related to building the project:
      </p>

      <Markdown text={`
      "scripts": {
        "build:development": "npm run clean && webpack --env.webpack=production --env.lore=development",
        "build:production": "npm run clean && webpack --env.webpack=production --env.lore=production -p",
        ...
      },
      `}/>

      <p>
        Start by building the application for development:
      </p>
      <Markdown type="jsx" text={`
      npm run build:development
      `}/>

      <p>
        This will compile all your assets and place them in a new folder called <code>/dist</code>.
      </p>

      <p>
        Go ahead an execute <code>npm run build:development</code> from the command line. You should see output
        similar to this once it completes, which took 15 seconds for this example:
      </p>

      <Markdown text={`
      Build completed in 15.319s

      Hash: 2057e1ed42158f2fde1f
      Version: webpack 2.4.1
      Time: 15323ms
                                                              Asset       Size  Chunks                    Chunk Names
                              bundle.vendor.760c1aca95f06ca49cc5.js     884 kB       1  [emitted]  [big]  vendor
        favicons-226798db74552f749c8ab26e8bfae037/favicon-32x32.png    1.58 kB          [emitted]
        favicons-226798db74552f749c8ab26e8bfae037/favicon-96x96.png    5.87 kB          [emitted]
      favicons-226798db74552f749c8ab26e8bfae037/favicon-230x230.png      17 kB          [emitted]
              favicons-226798db74552f749c8ab26e8bfae037/favicon.ico    33.3 kB          [emitted]
                   favicons-226798db74552f749c8ab26e8bfae037/.cache  996 bytes          [emitted]
                                              favicon-manifest.json  877 bytes          [emitted]
                                bundle.main.11e83aeeb2a9a9714d66.js    5.17 MB       0  [emitted]  [big]  main
        favicons-226798db74552f749c8ab26e8bfae037/favicon-16x16.png  644 bytes          [emitted]
                               styles.main.11e83aeeb2a9a9714d66.css    1.62 kB       0  [emitted]         main
                            bundle.main.11e83aeeb2a9a9714d66.js.map    6.36 MB       0  [emitted]         main
                           styles.main.11e83aeeb2a9a9714d66.css.map  113 bytes       0  [emitted]         main
                          bundle.vendor.760c1aca95f06ca49cc5.js.map    1.04 MB       1  [emitted]         vendor
                                                asset-manifest.json  472 bytes          [emitted]
                                             assets/images/logo.png    27.7 kB          [emitted]
                                          assets/images/favicon.png     266 kB          [emitted]  [big]
                                                         index.html    5.27 kB          [emitted]
      `}/>

      <p>
        What that command does is invoke webpack to build your application for production, and places the resulting
        assets in the <code>/dist</code> directory at the root of your project. Here are some key things to callout:
      </p>

      <ul>
        <li>
          Lore includes an image located in <code>assets/images/favicon.png</code> that is a 1500px png of the Lore
          logo. This file is used to generate a number of smaller favicons for different devices. By default, the
          Webpack config only generates favicons for the browser, but you can modify <code>webpack.config.js</code> if
          you need to generate favicons for devices like Apple, Android and Windows.
        </li>
        <li>
          Source maps are generated by default in the production build, to make debugging production applications
          easier.
        </li>
        <li>
          All images in <code>assets/images</code> are copied into the <code>/assets/images</code> directory in
          the <code>dist</code> folder. This means any images you add to your project will automatically be available
          in production.
        </li>
        <li>
          Webpack defaults to putting all JavaScript files in a single <code>bundle.js</code>, but the default Lore
          config breaks the code up into two chunks; one for vendor files, and one for the main application code.
        </li>
        <li>
          The gnarly looking file names (like <code>bundle.main.11e83aeeb2a9a9714d66.js</code>) include a hash that
          serves as a cache busting mechanism to prevent browsers from serving outdated files to users.
        </li>
      </ul>

      <p>
        The intent of the <code>npm run build:development</code> command is to enable you to quickly generate a
        production-like build, and verify it works, or work out any issues. Then, once everything looks good, you
        can run the <code>npm run build:production</code> command to minify and uglify the code for the real and final
        test before pushing to production.
      </p>
    </Template>
  );
};
